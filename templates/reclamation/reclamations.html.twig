{% extends 'Adminpage.html.twig' %}

{% block stylesheets %}
    <style>
        #paginator {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
        }

        #paginator button.active {
            background-color: #4a3179;
            color: white;
            border-color: #4a3179;
        }

        #paginator button:hover {
            background-color: #4a3179;
            color: white;
            border-color: #4a3179;
        }

        .title {
            font-size: 30px;
            color: white;
            text-align: center;
            margin-bottom: 30px;
        }

        .card {
            border: none;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
        }

        .card-title {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #0f1015;
        }

        .card-text {
            font-size: 16px;
            margin-bottom: 20px;
        }

        .card-header {
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            background-color: #4a3179;
        }

        .card-body {
            padding: 1rem;
        }

        .card-footer {
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
            background-color: #f8f9fa;
        }

        .card-text {
            color: black;
        }

        .card-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }


    </style>
{% endblock %}


{% block body %}

    <div class="container">
        <div class="d-flex flex-wrap justify-content-center align-items-center" style="max-height: 100vh">

        </div>

        <div class="d-flex justify-content-center my-4">
            <input type="date" id="dateFilterInput" class="form-control" onchange="applyDateFilter()">
        </div>
        {% for reclamation in reclamations %}
            <div class="card m-4" style="width: 400px"
                 data-search="{{ reclamation.user }} {{ reclamation.description }} {{ reclamation.etat }}" data-date="{{ reclamation.dateReclamation|date('Y-m-d') }}">
                <div class="card-header ">
                    <h5 class="card-title  mb-0">Réclamation n° {{ reclamation.id }}</h5>
                </div>
                <div class="card-body bg-light">
                    <p class="card-text font-italic" >Date: {{ reclamation.dateReclamation|date('d/m/Y H:i') }} </p>
                    <p class="card-text mb-0">Email: {{ reclamation.user }}</p>
                    <br>
                    <p class="card-text mb-0">Description: {{ reclamation.description }}</p>

                </div>
                <div class="card-footer bg-light">
                    <p class="card-text mb-0">État : {{ reclamation.etat }}</p>
                </div>
                <div class="button-group">
                    <a href="{{ path('reclamation_show', {'id': reclamation.id}) }}" class="btn btn-success">Show</a>
                    <a href="{{ path('reclamation_edit', {'id': reclamation.id}) }}" class="btn btn-primary">Edit</a>
                    <a href="{{ path('reponse_create', {'id': reclamation.id}) }}" class="btn btn-primary">repondre</a>
                    <a href="{{ path('remove_reclamation', {'id': reclamation.id}) }}" class="btn btn-danger"
                       onclick="return confirm('Are you sure you want to delete this Reclamation?')">Remove</a>
                </div>
            </div>
        {% endfor %}
    </div>
    <div id="paginator" class="d-flex justify-content-center mt-4"></div>

    <script>
        // Define the page size (how many items per page)
        const PAGE_SIZE = 2;

        // Get the total number of items and calculate the number of pages
        const totalItems = {{ reclamations|length }};
        const totalPages = Math.ceil(totalItems / PAGE_SIZE);

        // Initialize the paginator container and buttons
        const paginatorContainer = document.querySelector('#paginator');
        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.classList.add('btn', 'btn-outline-primary', 'mx-2');
            paginatorContainer.appendChild(button);
        }

        // Add event listener to the paginator buttons
        const paginatorButtons = document.querySelectorAll('#paginator button');
        paginatorButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Calculate the start and end indices for the current page
                const currentPage = parseInt(button.textContent);
                const startIndex = (currentPage - 1) * PAGE_SIZE;
                const endIndex = Math.min(startIndex + PAGE_SIZE, totalItems);

                // Hide all items that don't belong to the current page
                const items = document.querySelectorAll('.card');
                items.forEach((item, index) => {
                    if (index >= startIndex && index < endIndex) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });

                // Remove the active class from all buttons and add it to the current button
                paginatorButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');
            });
        });

        // Show the first page by default
        paginatorButtons[0].click();

        // Add event listener to the search input
        const searchInput = document.querySelector('#searchInput');
        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();
            const items = document.querySelectorAll('.card');
            items.forEach(item => {
                const searchContent = item.getAttribute('data-search').toLowerCase();
                if (searchContent.includes(searchTerm)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });

        });



        // Function to apply date filter
        // Function to apply date filter
        function applyDateFilter() {
            const dateFilterInput = document.querySelector('#dateFilterInput');
            const selectedDate = dateFilterInput.value;
            const items = document.querySelectorAll('.card');
            items.forEach(item => {
                const itemDate = item.getAttribute('data-date');
                if (selectedDate === "" || itemDate.includes(selectedDate)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        }
    </script>
    </div>

{% endblock %}
